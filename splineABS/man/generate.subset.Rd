% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen_subset.R
\name{generate.subset}
\alias{generate.subset}
\title{Generate sampling basis in each subset}
\usage{
generate.subset(N, basis.index = NULL, subset.number = 1,
  subset.element.index = NULL, ratio = NULL)
}
\arguments{
\item{N}{The number of whole smaples.}

\item{basis.index}{The indices of samples in whole data. It could be NULL.}

\item{subset.number}{The number of subsets.}

\item{subset.element.index}{A list of indices of each subset's element in
whole data. If NULL, randomly generate subsets.}

\item{ratio}{A vector of the ratio of size of each subset. Default = equal.}
}
\value{
A list contains two lists named as \code{subsetElementIndex},
  \code{basisIndexInSubset}.
\itemize{
  \item \code{subsetElementIndex}: The global indices(global location) of
    each subset's elements in whole data.
  \item \code{basisIndexInSubset}: The local indices(local location) of
    basis in each subset.
  \item remark: global means the location of each element in whole data;
    local means the location in each subset.
}
}
\description{
Return a list of indices of samples in whole data and indices of basis in
  each subset. Default: \code{subset.element.index == NULL}, randomly
  generate subsests equally.
}
\details{
In order to garantee that every subset shares the same basis,
  each subset would have a copy of whole basis(by operation \code{union}).
  For example, if the basis are {#1, #2} and if the orginal subsets are
  {#1, #3, #4}, {#2, #5}, the return subsets would be {#1, #2, #3, #4} ,
  {#1, #2, #5}.
}
\examples{
> generate.subset(20, basis.index = c(1,6,11,16), subset.number = 2)
$subsetElementIndex
$subsetElementIndex[[1]]
[1]  1  2  3  5  6  7  9 11 12 13 14 16 18

$subsetElementIndex[[2]]
[1]  1  4  6  8 10 11 15 16 17 19 20

$basisIndexInSubset
$basisIndexInSubset[[1]]
[1]  1  5  8 12

$basisIndexInSubset[[2]]
[1] 1 3 6 8


> generate.subset(10, basis.index = c(1,2,6,7), subset.number = 2,
    subset.element.index =list(1:5, 6:10))
$subsetElementIndex
$subsetElementIndex[[1]]
[1] 1 2 3 4 5 6 7

$subsetElementIndex[[2]]
[1]  1  2  6  7  8  9 10

$basisIndexInSubset
$basisIndexInSubset[[1]]
[1] 1 2 6 7

$basisIndexInSubset[[2]]
[1] 1 2 3 4

}
